// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Standard Edition"

// DATE "10/17/2022 01:16:04"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module PR7 (
	clk,
	reset,
	imp_width,
	pwm_out);
input 	clk;
input 	reset;
input 	[3:0] imp_width;
output 	pwm_out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \pwm_out~output_o ;
wire \imp_width[3]~input_o ;
wire \clk~input_o ;
wire \counter|count[0]~3_combout ;
wire \reset~input_o ;
wire \counter|count[1]~2_combout ;
wire \counter|count[2]~1_combout ;
wire \counter|count[3]~0_combout ;
wire \imp_width[2]~input_o ;
wire \imp_width[1]~input_o ;
wire \imp_width[0]~input_o ;
wire \LessThan0~0_combout ;
wire \LessThan0~1_combout ;
wire \LessThan0~2_combout ;
wire [3:0] \counter|count ;


cycloneive_io_obuf \pwm_out~output (
	.i(\LessThan0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\pwm_out~output_o ),
	.obar());
// synopsys translate_off
defparam \pwm_out~output .bus_hold = "false";
defparam \pwm_out~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \imp_width[3]~input (
	.i(imp_width[3]),
	.ibar(gnd),
	.o(\imp_width[3]~input_o ));
// synopsys translate_off
defparam \imp_width[3]~input .bus_hold = "false";
defparam \imp_width[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \counter|count[0]~3 (
// Equation(s):
// \counter|count[0]~3_combout  = !\counter|count [0]

	.dataa(\counter|count [0]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\counter|count[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \counter|count[0]~3 .lut_mask = 16'h5555;
defparam \counter|count[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \counter|count[0] (
	.clk(\clk~input_o ),
	.d(\counter|count[0]~3_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\counter|count [0]),
	.prn(vcc));
// synopsys translate_off
defparam \counter|count[0] .is_wysiwyg = "true";
defparam \counter|count[0] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \counter|count[1]~2 (
// Equation(s):
// \counter|count[1]~2_combout  = \counter|count [1] $ (\counter|count [0])

	.dataa(gnd),
	.datab(gnd),
	.datac(\counter|count [1]),
	.datad(\counter|count [0]),
	.cin(gnd),
	.combout(\counter|count[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \counter|count[1]~2 .lut_mask = 16'h0FF0;
defparam \counter|count[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \counter|count[1] (
	.clk(\clk~input_o ),
	.d(\counter|count[1]~2_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\counter|count [1]),
	.prn(vcc));
// synopsys translate_off
defparam \counter|count[1] .is_wysiwyg = "true";
defparam \counter|count[1] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \counter|count[2]~1 (
// Equation(s):
// \counter|count[2]~1_combout  = \counter|count [2] $ (((\counter|count [1] & \counter|count [0])))

	.dataa(gnd),
	.datab(\counter|count [2]),
	.datac(\counter|count [1]),
	.datad(\counter|count [0]),
	.cin(gnd),
	.combout(\counter|count[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \counter|count[2]~1 .lut_mask = 16'h3CCC;
defparam \counter|count[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \counter|count[2] (
	.clk(\clk~input_o ),
	.d(\counter|count[2]~1_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\counter|count [2]),
	.prn(vcc));
// synopsys translate_off
defparam \counter|count[2] .is_wysiwyg = "true";
defparam \counter|count[2] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \counter|count[3]~0 (
// Equation(s):
// \counter|count[3]~0_combout  = \counter|count [3] $ (((\counter|count [1] & (\counter|count [0] & \counter|count [2]))))

	.dataa(\counter|count [3]),
	.datab(\counter|count [1]),
	.datac(\counter|count [0]),
	.datad(\counter|count [2]),
	.cin(gnd),
	.combout(\counter|count[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \counter|count[3]~0 .lut_mask = 16'h6AAA;
defparam \counter|count[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \counter|count[3] (
	.clk(\clk~input_o ),
	.d(\counter|count[3]~0_combout ),
	.asdata(vcc),
	.clrn(!\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\counter|count [3]),
	.prn(vcc));
// synopsys translate_off
defparam \counter|count[3] .is_wysiwyg = "true";
defparam \counter|count[3] .power_up = "low";
// synopsys translate_on

cycloneive_io_ibuf \imp_width[2]~input (
	.i(imp_width[2]),
	.ibar(gnd),
	.o(\imp_width[2]~input_o ));
// synopsys translate_off
defparam \imp_width[2]~input .bus_hold = "false";
defparam \imp_width[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \imp_width[1]~input (
	.i(imp_width[1]),
	.ibar(gnd),
	.o(\imp_width[1]~input_o ));
// synopsys translate_off
defparam \imp_width[1]~input .bus_hold = "false";
defparam \imp_width[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \imp_width[0]~input (
	.i(imp_width[0]),
	.ibar(gnd),
	.o(\imp_width[0]~input_o ));
// synopsys translate_off
defparam \imp_width[0]~input .bus_hold = "false";
defparam \imp_width[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (\imp_width[1]~input_o  & (((\imp_width[0]~input_o  & !\counter|count [0])) # (!\counter|count [1]))) # (!\imp_width[1]~input_o  & (\imp_width[0]~input_o  & (!\counter|count [0] & !\counter|count [1])))

	.dataa(\imp_width[1]~input_o ),
	.datab(\imp_width[0]~input_o ),
	.datac(\counter|count [0]),
	.datad(\counter|count [1]),
	.cin(gnd),
	.combout(\LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = 16'h08AE;
defparam \LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_combout  = (\imp_width[2]~input_o  & ((\LessThan0~0_combout ) # (!\counter|count [2]))) # (!\imp_width[2]~input_o  & (!\counter|count [2] & \LessThan0~0_combout ))

	.dataa(\imp_width[2]~input_o ),
	.datab(\counter|count [2]),
	.datac(\LessThan0~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'hB2B2;
defparam \LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~2 (
// Equation(s):
// \LessThan0~2_combout  = (\imp_width[3]~input_o  & ((\LessThan0~1_combout ) # (!\counter|count [3]))) # (!\imp_width[3]~input_o  & (!\counter|count [3] & \LessThan0~1_combout ))

	.dataa(\imp_width[3]~input_o ),
	.datab(\counter|count [3]),
	.datac(\LessThan0~1_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~2 .lut_mask = 16'hB2B2;
defparam \LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign pwm_out = \pwm_out~output_o ;

endmodule
