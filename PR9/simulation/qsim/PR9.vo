// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Standard Edition"

// DATE "11/14/2022 16:25:52"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module FSM_Moore (
	clk,
	reset,
	in,
	out,
	w_state);
input 	clk;
input 	reset;
input 	[1:0] in;
output 	[1:0] out;
output 	[1:0] w_state;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \out[0]~output_o ;
wire \out[1]~output_o ;
wire \w_state[0]~output_o ;
wire \w_state[1]~output_o ;
wire \clk~input_o ;
wire \in[0]~input_o ;
wire \in[1]~input_o ;
wire \Selector2~0_combout ;
wire \Selector2~1_combout ;
wire \reset~input_o ;
wire \state.S2~q ;
wire \Selector3~0_combout ;
wire \state.S3~q ;
wire \w_state~3_combout ;
wire \Selector0~0_combout ;
wire \state.S0~q ;
wire \out~1_combout ;
wire \Selector1~0_combout ;
wire \state.S1~q ;
wire \w_state~2_combout ;


cycloneive_io_obuf \out[0]~output (
	.i(\state.S1~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[0]~output .bus_hold = "false";
defparam \out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \out[1]~output (
	.i(\out~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[1]~output .bus_hold = "false";
defparam \out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \w_state[0]~output (
	.i(!\w_state~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w_state[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \w_state[0]~output .bus_hold = "false";
defparam \w_state[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \w_state[1]~output (
	.i(!\w_state~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\w_state[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \w_state[1]~output .bus_hold = "false";
defparam \w_state[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \in[0]~input (
	.i(in[0]),
	.ibar(gnd),
	.o(\in[0]~input_o ));
// synopsys translate_off
defparam \in[0]~input .bus_hold = "false";
defparam \in[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \in[1]~input (
	.i(in[1]),
	.ibar(gnd),
	.o(\in[1]~input_o ));
// synopsys translate_off
defparam \in[1]~input .bus_hold = "false";
defparam \in[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Selector2~0 (
// Equation(s):
// \Selector2~0_combout  = (\in[0]~input_o  & (\in[1]~input_o  & ((\state.S1~q ) # (\state.S2~q ))))

	.dataa(\in[0]~input_o ),
	.datab(\in[1]~input_o ),
	.datac(\state.S1~q ),
	.datad(\state.S2~q ),
	.cin(gnd),
	.combout(\Selector2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector2~0 .lut_mask = 16'h8880;
defparam \Selector2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Selector2~1 (
// Equation(s):
// \Selector2~1_combout  = (\Selector2~0_combout ) # ((\state.S3~q  & ((!\in[1]~input_o ) # (!\in[0]~input_o ))))

	.dataa(\Selector2~0_combout ),
	.datab(\state.S3~q ),
	.datac(\in[0]~input_o ),
	.datad(\in[1]~input_o ),
	.cin(gnd),
	.combout(\Selector2~1_combout ),
	.cout());
// synopsys translate_off
defparam \Selector2~1 .lut_mask = 16'hAEEE;
defparam \Selector2~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \state.S2 (
	.clk(\clk~input_o ),
	.d(\Selector2~1_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state.S2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state.S2 .is_wysiwyg = "true";
defparam \state.S2 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \Selector3~0 (
// Equation(s):
// \Selector3~0_combout  = (!\state.S3~q  & (!\state.S2~q  & (!\in[0]~input_o  & !\in[1]~input_o )))

	.dataa(\state.S3~q ),
	.datab(\state.S2~q ),
	.datac(\in[0]~input_o ),
	.datad(\in[1]~input_o ),
	.cin(gnd),
	.combout(\Selector3~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector3~0 .lut_mask = 16'h0001;
defparam \Selector3~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state.S3 (
	.clk(\clk~input_o ),
	.d(\Selector3~0_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state.S3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state.S3 .is_wysiwyg = "true";
defparam \state.S3 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \w_state~3 (
// Equation(s):
// \w_state~3_combout  = (\state.S1~q ) # (!\state.S0~q )

	.dataa(\state.S1~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\state.S0~q ),
	.cin(gnd),
	.combout(\w_state~3_combout ),
	.cout());
// synopsys translate_off
defparam \w_state~3 .lut_mask = 16'hAAFF;
defparam \w_state~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (\in[0]~input_o  & (((\in[1]~input_o )) # (!\w_state~3_combout ))) # (!\in[0]~input_o  & ((\in[1]~input_o  & (!\w_state~3_combout )) # (!\in[1]~input_o  & ((!\state.S2~q )))))

	.dataa(\w_state~3_combout ),
	.datab(\state.S2~q ),
	.datac(\in[0]~input_o ),
	.datad(\in[1]~input_o ),
	.cin(gnd),
	.combout(\Selector0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector0~0 .lut_mask = 16'hF553;
defparam \Selector0~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state.S0 (
	.clk(\clk~input_o ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state.S0~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state.S0 .is_wysiwyg = "true";
defparam \state.S0 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \out~1 (
// Equation(s):
// \out~1_combout  = (\state.S3~q ) # (!\state.S0~q )

	.dataa(\state.S3~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\state.S0~q ),
	.cin(gnd),
	.combout(\out~1_combout ),
	.cout());
// synopsys translate_off
defparam \out~1 .lut_mask = 16'hAAFF;
defparam \out~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (\in[0]~input_o  & ((\in[1]~input_o  & (\out~1_combout )) # (!\in[1]~input_o  & ((\state.S2~q ))))) # (!\in[0]~input_o  & (((\state.S2~q  & \in[1]~input_o ))))

	.dataa(\out~1_combout ),
	.datab(\state.S2~q ),
	.datac(\in[0]~input_o ),
	.datad(\in[1]~input_o ),
	.cin(gnd),
	.combout(\Selector1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector1~0 .lut_mask = 16'hACC0;
defparam \Selector1~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \state.S1 (
	.clk(\clk~input_o ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\state.S1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \state.S1 .is_wysiwyg = "true";
defparam \state.S1 .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \w_state~2 (
// Equation(s):
// \w_state~2_combout  = (\state.S2~q ) # (!\state.S0~q )

	.dataa(\state.S2~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\state.S0~q ),
	.cin(gnd),
	.combout(\w_state~2_combout ),
	.cout());
// synopsys translate_off
defparam \w_state~2 .lut_mask = 16'hAAFF;
defparam \w_state~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign out[0] = \out[0]~output_o ;

assign out[1] = \out[1]~output_o ;

assign w_state[0] = \w_state[0]~output_o ;

assign w_state[1] = \w_state[1]~output_o ;

endmodule
